# Generated by Django 2.2.15 on 2020-08-18 03:37

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('santa', '0015_auto_20200817_1431'),
    ]

    operations = [
        migrations.RenameField(
            model_name='configuration',
            old_name='whitelist_regex',
            new_name='allowed_path_regex',
        ),
        migrations.RenameField(
            model_name='configuration',
            old_name='blacklist_regex',
            new_name='blocked_path_regex',
        ),
        migrations.RenameField(
            model_name='configuration',
            old_name='bundles_enabled',
            new_name='enable_bundles',
        ),
        migrations.AddField(
            model_name='configuration',
            name='client_certificate_auth',
            field=models.BooleanField(default=False, help_text='If set, a client certificate will be required for sync authentication. Santa will automatically look for a matching certificate and its private key in the System keychain, if the TLS server advertises the accepted CA certificates. If the CA certificates are not sent to the client, use the Client Auth Certificate Issuer CN setting.', verbose_name='Client certificate authentication'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='enable_transitive_rules',
            field=models.BooleanField(default=False, help_text='If set, the transitive rule feature is enabled.'),
        ),
        migrations.AlterField(
            model_name='configuration',
            name='client_auth_certificate_issuer_cn',
            field=models.CharField(blank=True, help_text='If set, this is the Issuer Name of a certificate in the System keychain to be used for sync authentication. The corresponding private key must also be in the keychain.', max_length=255, verbose_name='Client auth certificate issuer CN'),
        ),
    ]
