# Stubs for django.db.models.fields.files (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any
from django.core.files.base import File
from django.core.files.images import ImageFile
from django.db.models.fields import Field
from django.utils.translation import ugettext_lazy as _

class FieldFile(File):
    instance = ... # type: Any
    field = ... # type: Any
    storage = ... # type: Any
    def __init__(self, instance, field, name): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
    def __hash__(self): ...
    file = ... # type: Any
    path = ... # type: Any
    url = ... # type: Any
    size = ... # type: Any
    def open(self, mode=''): ...
    name = ... # type: Any
    def save(self, name, content, save=True): ...
    def delete(self, save=True): ...
    closed = ... # type: Any
    def close(self): ...

class FileDescriptor:
    field = ... # type: Any
    def __init__(self, field): ...
    def __get__(self, instance=None, owner=None): ...
    def __set__(self, instance, value): ...

class FileField(Field):
    attr_class = ... # type: Any
    descriptor_class = ... # type: Any
    description = ... # type: Any
    storage = ... # type: Any
    upload_to = ... # type: Any
    def __init__(self, verbose_name=None, name=None, upload_to='', storage=None, **kwargs): ...
    def check(self, **kwargs): ...
    def deconstruct(self): ...
    def get_internal_type(self): ...
    def get_prep_lookup(self, lookup_type, value): ...
    def get_prep_value(self, value): ...
    def pre_save(self, model_instance, add): ...
    def contribute_to_class(self, cls, name, **kwargs): ...
    def get_directory_name(self): ...
    def get_filename(self, filename): ...
    def generate_filename(self, instance, filename): ...
    def save_form_data(self, instance, data): ...
    def formfield(self, **kwargs): ...

class ImageFileDescriptor(FileDescriptor):
    def __set__(self, instance, value): ...

class ImageFieldFile(ImageFile, FieldFile):
    def delete(self, save=True): ...

class ImageField(FileField):
    attr_class = ... # type: Any
    descriptor_class = ... # type: Any
    description = ... # type: Any
    def __init__(self, verbose_name=None, name=None, width_field=None, height_field=None, **kwargs): ...
    def check(self, **kwargs): ...
    def deconstruct(self): ...
    def contribute_to_class(self, cls, name, **kwargs): ...
    def update_dimension_fields(self, instance, force=False, *args, **kwargs): ...
    def formfield(self, **kwargs): ...
