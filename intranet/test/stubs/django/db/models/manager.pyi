# Stubs for django.db.models.manager (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any
from .query import QuerySet

def ensure_default_manager(cls): ...

class BaseManager:
    creation_counter = ... # type: Any
    use_in_migrations = ... # type: Any
    def __new__(cls, *args, **kwargs): ...
    model = ... # type: Any
    name = ... # type: Any
    def __init__(self): ...
    def deconstruct(self): ...
    def check(self, **kwargs): ...
    @classmethod
    def from_queryset(cls, queryset_class, class_name=None): ...
    def contribute_to_class(self, model, name): ...
    def db_manager(self, using=None, hints=None): ...
    @property
    def db(self): ...
    def get_queryset(self): ...
    def all(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
    def __hash__(self): ...

class Manager(BaseManager, QuerySet): ...

class ManagerDescriptor:
    manager = ... # type: Any
    def __init__(self, manager): ...
    def __get__(self, instance, type=None): ...

class AbstractManagerDescriptor:
    model = ... # type: Any
    def __init__(self, model): ...
    def __get__(self, instance, type=None): ...

class SwappedManagerDescriptor:
    model = ... # type: Any
    def __init__(self, model): ...
    def __get__(self, instance, type=None): ...

class EmptyManager(Manager):
    model = ... # type: Any
    def __init__(self, model): ...
    def get_queryset(self): ...
