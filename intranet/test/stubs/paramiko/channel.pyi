# Stubs for paramiko.channel (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any
from paramiko.file import BufferedFile
from paramiko.util import ClosingContextManager

def open_only(func): ...

class Channel(ClosingContextManager):
    chanid = ... # type: Any
    remote_chanid = ... # type: Any
    transport = ... # type: Any
    active = ... # type: Any
    eof_received = ... # type: Any
    eof_sent = ... # type: Any
    in_buffer = ... # type: Any
    in_stderr_buffer = ... # type: Any
    timeout = ... # type: Any
    closed = ... # type: Any
    ultra_debug = ... # type: Any
    lock = ... # type: Any
    out_buffer_cv = ... # type: Any
    in_window_size = ... # type: Any
    out_window_size = ... # type: Any
    in_max_packet_size = ... # type: Any
    out_max_packet_size = ... # type: Any
    in_window_threshold = ... # type: Any
    in_window_sofar = ... # type: Any
    status_event = ... # type: Any
    logger = ... # type: Any
    event = ... # type: Any
    event_ready = ... # type: Any
    combine_stderr = ... # type: Any
    exit_status = ... # type: Any
    origin_addr = ... # type: Any
    def __init__(self, chanid): ...
    def __del__(self): ...
    def get_pty(self, term='', width=80, height=24, width_pixels=0, height_pixels=0): ...
    def invoke_shell(self): ...
    def exec_command(self, command): ...
    def invoke_subsystem(self, subsystem): ...
    def resize_pty(self, width=80, height=24, width_pixels=0, height_pixels=0): ...
    def exit_status_ready(self): ...
    def recv_exit_status(self): ...
    def send_exit_status(self, status): ...
    def request_x11(self, screen_number=0, auth_protocol=None, auth_cookie=None, single_connection=False, handler=None): ...
    def request_forward_agent(self, handler): ...
    def get_transport(self): ...
    def set_name(self, name): ...
    def get_name(self): ...
    def get_id(self): ...
    def set_combine_stderr(self, combine): ...
    def settimeout(self, timeout): ...
    def gettimeout(self): ...
    def setblocking(self, blocking): ...
    def getpeername(self): ...
    def close(self): ...
    def recv_ready(self): ...
    def recv(self, nbytes): ...
    def recv_stderr_ready(self): ...
    def recv_stderr(self, nbytes): ...
    def send_ready(self): ...
    def send(self, s): ...
    def send_stderr(self, s): ...
    def sendall(self, s): ...
    def sendall_stderr(self, s): ...
    def makefile(self, *params): ...
    def makefile_stderr(self, *params): ...
    def fileno(self): ...
    def shutdown(self, how): ...
    def shutdown_read(self): ...
    def shutdown_write(self): ...

class ChannelFile(BufferedFile):
    channel = ... # type: Any
    def __init__(self, channel, mode='', bufsize=-1): ...

class ChannelStderrFile(ChannelFile):
    def __init__(self, channel, mode='', bufsize=-1): ...
